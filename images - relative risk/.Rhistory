m8 <- which(mgrid>=7.5 & mgrid<8.5)
m9 <- which(mgrid>=8.5 & mgrid<9.5)
m10 <- which(mgrid>=9.5 & mgrid<10.5)
m11 <- which(mgrid>=10.5 & mgrid<11.5)
m12 <- which(mgrid>=11.5)
out_m_1 <- d_X_month[[1]]
for (j in m1) {
out_m_1 <- out_m_1+d_X_month[[j]]
}
out_m_1 <- out_m_1 -  d_X_month[[1]]
out_m_2 <- d_X_month[[2]]
for (j in m2) {
out_m_2 <- out_m_2+d_X_month[[j]]
}
out_m_2 <- out_m_2 -  d_X_month[[2]]
out_m_3 <- d_X_month[[3]]
for (j in m3) {
out_m_3 <- out_m_3+d_X_month[[j]]
}
out_m_3 <- out_m_3 -  d_X_month[[3]]
out_m_4 <- d_X_month[[4]]
for (j in m4) {
out_m_4 <- out_m_4+d_X_month[[j]]
}
out_m_4 <- out_m_4 -  d_X_month[[4]]
out_m_5 <- d_X_month[[1]]
for (j in m1) {
out_m_5 <- out_m_5+d_X_month[[j]]
}
out_m_5 <- out_m_5 -  d_X_month[[1]]
out_m_6 <- d_X_month[[1]]
for (j in m1) {
out_m_6 <- out_m_6+d_X_month[[j]]
}
out_m_6 <- out_m_6 -  d_X_month[[1]]
out_m_7 <- d_X_month[[1]]
for (j in m1) {
out_m_7 <- out_m_7+d_X_month[[j]]
}
out_m_7 <- out_m_7 -  d_X_month[[1]]
out_m_8 <- d_X_month[[1]]
for (j in m1) {
out_m_8 <- out_m_8+d_X_month[[j]]
}
out_m_8 <- out_m_8 -  d_X_month[[1]]
out_m_9 <- d_X_month[[1]]
for (j in m1) {
out_m_9 <- out_m_9+d_X_month[[j]]
}
out_m_9 <- out_m_9 -  d_X_month[[1]]
out_m_10 <- d_X_month[[1]]
for (j in m1) {
out_m_10 <- out_m_10+d_X_month[[j]]
}
out_m_10 <- out_m_10 -  d_X_month[[1]]
out_m_11 <- d_X_month[[1]]
for (j in m1) {
out_m_11 <- out_m_11+d_X_month[[j]]
}
out_m_11 <- out_m_11 -  d_X_month[[1]]
out_m_12 <- d_X_month[[1]]
for (j in m1) {
out_m_12 <- out_m_12+d_X_month[[j]]
}
out_m_12 <- out_m_12 -  d_X_month[[1]]
im_d_m_1 <- raster(as.im(out_m_1))
im_d_m_2 <- raster(as.im(out_m_2))
im_d_m_3 <- raster(as.im(out_m_3))
im_d_m_4 <- raster(as.im(out_m_4))
im_d_m_5 <- raster(as.im(out_m_5))
im_d_m_6 <- raster(as.im(out_m_6))
im_d_m_7 <- raster(as.im(out_m_7))
im_d_m_8 <- raster(as.im(out_m_8))
im_d_m_9 <- raster(as.im(out_m_9))
im_d_m_10 <- raster(as.im(out_m_10))
im_d_m_11 <- raster(as.im(out_m_11))
im_d_m_12 <- raster(as.im(out_m_12))
out_m_stack <- stack(im_d_m_1,im_d_m_2,im_d_m_3,im_d_m_4,
im_d_m_5,im_d_m_6,im_d_m_7,im_d_m_8,
im_d_m_9,im_d_m_10,im_d_m_11,im_d_m_12)
names(out_m_stack)=c('Jan','Feb','Mar','Apr','May','June','July',
'Aug','Sep','Oct','Nov','Dec')
qtss_m <- as.vector(sort(c(quantile(im_d_m_1*1000,seq(0,1,len=20)),
quantile(im_d_m_2*1000,seq(0,1,len=20)),
quantile(im_d_m_3*1000,seq(0,1,len=20)),
quantile(im_d_m_4*1000,seq(0,1,len=20)),
quantile(im_d_m_5*1000,seq(0,1,len=20)),
quantile(im_d_m_6*1000,seq(0,1,len=20)),
quantile(im_d_m_7*1000,seq(0,1,len=20)),
quantile(im_d_m_8*1000,seq(0,1,len=20)),
quantile(im_d_m_9*1000,seq(0,1,len=20)),
quantile(im_d_m_10*1000,seq(0,1,len=20)),
quantile(im_d_m_11*1000,seq(0,1,len=20)),
quantile(im_d_m_12*1000,seq(0,1,len=20)))))
spplot(out_m_stack*1000,col.regions=c(viridis(145),rep("#f03b20",85)))
mm1 <- which(mgrid<3.5)
mm2 <- which(mgrid>=3.5 & mgrid<6.5)
mm3 <- which(mgrid>=6.5 & mgrid<9.5)
mm4 <- which(mgrid>=9.5 )
out_mm_1 <- d_X_month[[1]]
for (j in m1) {
out_mm_1 <- out_mm_1+d_X_month[[j]]
}
out_mm_1 <- out_mm_1 -  d_X_month[[1]]
out_mm_2 <- d_X_month[[2]]
for (j in m2) {
out_mm_2 <- out_mm_2+d_X_month[[j]]
}
out_mm_2 <- out_mm_2 -  d_X_month[[2]]
out_mm_3 <- d_X_month[[3]]
for (j in m3) {
out_mm_3 <- out_mm_3+d_X_month[[j]]
}
out_mm_3 <- out_mm_3 -  d_X_month[[3]]
out_mm_4 <- d_X_month[[4]]
for (j in m4) {
out_mm_4 <- out_mm_4+d_X_month[[j]]
}
out_mm_4 <- out_mm_4 -  d_X_month[[4]]
im_d_mm_1 <- raster(as.im(out_mm_1))
im_d_mm_2 <- raster(as.im(out_mm_2))
im_d_mm_3 <- raster(as.im(out_mm_3))
im_d_mm_4 <- raster(as.im(out_mm_4))
out_mm_stack <- stack(im_d_mm_1,im_d_mm_2,im_d_mm_3,im_d_mm_4)
qtss_mm <- as.vector(sort(c(quantile(im_d_mm_1*1000,seq(0,1,len=20)),
quantile(im_d_mm_2*1000,seq(0,1,len=20)),
quantile(im_d_mm_3*1000,seq(0,1,len=20)),
quantile(im_d_mm_4*1000,seq(0,1,len=20)))))
spplot(out_mm_stack*1000,at=qtss_mm,col.regions=c(viridis(80),rep("#f03b20",85)))
spplot(out_mm_stack*1000,at=qtss_mm,col.regions=c(viridis(80),rep("#f03b20",2)))
spplot(out_mm_stack*1000,at=qtss_mm,col.regions=c(viridis(80),rep("#f03b20",5)))
spplot(out_mm_stack*1000,at=qtss_mm,col.regions=c(viridis(80),rep("#f03b20",3)))
spplot(out_mm_stack*1000,at=qtss_mm,col.regions=c(viridis(70),rep("#f03b20",3)))
spplot(out_mm_stack*1000,at=qtss_mm,col.regions=c(viridis(80),rep("#f03b20",4)))
names(out_m_stack)<- c("Season1","Season2","Season3","Season4",)
names(out_m_stack)<- c("Season1","Season2","Season3","Season4")
mgrid <- attr(d_X_month,"tempden")$x
m1 <- which(mgrid<3.5)
m2 <- which(mgrid>=3.5 & mgrid<6.5)
m3 <- which(mgrid>=6.5 & mgrid<9.5)
m4 <- which(mgrid>=9.5 )
out_m_1 <- d_X_month[[1]]
for (j in m1) {
out_m_1 <- out_m_1+d_X_month[[j]]
}
out_m_1 <- out_m_1 -  d_X_month[[1]]
out_m_2 <- d_X_month[[2]]
for (j in m2) {
out_m_2 <- out_m_2+d_X_month[[j]]
}
out_m_2 <- out_m_2 -  d_X_month[[2]]
out_m_3 <- d_X_month[[3]]
for (j in m3) {
out_m_3 <- out_m_3+d_X_month[[j]]
}
out_m_3 <- out_m_3 -  d_X_month[[3]]
out_m_4 <- d_X_month[[4]]
for (j in m4) {
out_m_4 <- out_m_4+d_X_month[[j]]
}
out_m_4 <- out_m_4 -  d_X_month[[4]]
im_d_m_1 <- raster(as.im(out_m_1))
im_d_m_2 <- raster(as.im(out_m_2))
im_d_m_3 <- raster(as.im(out_m_3))
im_d_m_4 <- raster(as.im(out_m_4))
out_m_stack <- stack(im_d_m_1,im_d_m_2,im_d_m_3,im_d_m_4)
names(out_m_stack)<- c("Season1","Season2","Season3","Season4")
qtss_m <- as.vector(sort(c(quantile(im_d_m_1*1000,seq(0,1,len=20)),
quantile(im_d_m_2*1000,seq(0,1,len=20)),
quantile(im_d_m_3*1000,seq(0,1,len=20)),
quantile(im_d_m_4*1000,seq(0,1,len=20)))))
png("im_d_m.png",height = 500,width = 800)
spplot(out_m_stack*1000,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",4)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
spplot(out_m_stack*1000,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",4)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_m_stack*1000,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
png("im_d_m.png",height = 500,width = 800)
spplot(out_m_stack*1000,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
out_m_stack <- stack(im_d_m_1,im_d_m_2,im_d_m_3,im_d_m_4)
names(out_m_stack)<- c("Jan_March","May_Jun","Jul_Sep","Oct_Dec")
qtss_m <- as.vector(sort(c(quantile(im_d_m_1*1000,seq(0,1,len=20)),
quantile(im_d_m_2*1000,seq(0,1,len=20)),
quantile(im_d_m_3*1000,seq(0,1,len=20)),
quantile(im_d_m_4*1000,seq(0,1,len=20)))))
png("im_d_m.png",height = 500,width = 800)
plot(as.tpp.stlpp(X_week))
as.tpp.stlpp(X_week)
plot(.Last.value)
as.tpp.stlpp(X_week)
plot(.Last.value)
plot(X_week)
plot(attr(d_X_week,"tempden")) # density plot
dev.off()
plot(X_week)
as.tpp.stlpp(X_week)
plot(X_week)
as.tpp.stlpp(X_week)
plot(.Last.value)
png("im_d_m.png",height = 500,width = 800)
spplot(out_m_stack*1000,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
hp <- tpp(hour)
png("im_d_m.png",height = 800,width = 800)
spplot(out_m_stack*1000,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
png("im_d_w.png",height = 600,width = 800)
spplot(out_w_stack*1000,at=qtss_w,col.regions=c(viridis(140),rep("#f03b20",6)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
png("im_d_w.png",height = 500,width = 800)
spplot(out_w_stack*1000,at=qtss_w,col.regions=c(viridis(140),rep("#f03b20",6)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
packages <- function(){
library(dplyr)
library(lattice)
library(tibble)
library(rgdal)
library(tidyverse)
library(sp)
library(sf)
library(spatstat)
library(sparr)
library(raster)
library(ggplot2)
library(viridis)
library(ggmap)
library(leaflet)
}
packages
packages()
#################################################
#################################################
################################################# load packages
#################################################
#################################################
pks <- function(){
library(dplyr)
library(lattice)
library(tibble)
library(rgdal)
library(tidyverse)
library(sp)
library(sf)
library(spatstat)
library(sparr)
library(raster)
library(ggplot2)
library(viridis)
library(ggmap)
library(leaflet)
}
pkg = c("ggplot2","sp")
library(pkg)
install.packages(pkg)
ipak(pkg)
lubripack(pkg)
library(devtools)
lubripack(pkg)
lubripack(pkg)
library(tools, lib.loc = "C:/Program Files/R/R-4.0.0/library")
lubripack(pkg)
libraries(pkg)
install.packages("easypackages")
libraries(pkg)
library(easypackages)
libraries(pkg)
library(gganimate)
pkg = c("devtools","dplyr","plyr","lattice","tibble","rgdal","rgl","parallel"
"tidyverse","tidyr", "XML","sp","sf","spatstat","spatstat.utils",
"stlnpp","sparr","stplanr","raster","ggplot2","ggthemes","viridis",
"ggmap","leaflet","maptools","mapview","reshape","reshape2","plotly",
"ggvis","gganimate")
pkg = c("devtools","dplyr","plyr","lattice","tibble","rgdal","rgl","parallel",
"tidyverse","tidyr", "XML","sp","sf","spatstat","spatstat.utils",
"stlnpp","sparr","stplanr","raster","ggplot2","ggthemes","viridis",
"ggmap","leaflet","maptools","mapview","reshape","reshape2","plotly",
"ggvis","gganimate")
libraries(pkg)
libraries(pkg)
p_cat <- plot(d_X_Accident.categories_2/d_X_Accident.categories_3,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
load("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/HI_LN_AC_unique.RData")  ### Reza
HI_LN_AC_unique
X <- HI_LN_AC_unique
X_unmark <- unmark(X)
npoints(X_unmark)
X$data$Type.of.accident
X$data$Accident.categories
X_Accident.categories <- X
marks(X_Accident.categories) <- as.numeric(X$data$Accident.categories)
X_Accident.categories$data$marks
X_Accident.categories_1 <- X_Accident.categories[X_Accident.categories$data$marks==1]
X_Accident.categories_2 <- X_Accident.categories[X_Accident.categories$data$marks==2]
X_Accident.categories_3 <- X_Accident.categories[X_Accident.categories$data$marks==3]
npoints(X_Accident.categories_1)
#[1] 3
npoints(X_Accident.categories_2)
#[1] 26
npoints(X_Accident.categories_3)
common_bw_cat23 <- LSCV.risk(as.ppp(X_Accident.categories_2),
as.ppp(X_Accident.categories_3),
method = "hazelton",hlim = c(0,3000)) # hlim depends on the pattern, usually not given, but if it detects the largest bw in the automatic range, then we need to give a large one to make sure about the selectedd bw.
d_X_Accident.categories_2 <- densityQuick.lpp(unmark(X_Accident.categories_2), sigma = common_bw_cat23,
positive = TRUE,dimyx=256)
d_X_Accident.categories_3 <- densityQuick.lpp(unmark(X_Accident.categories_3), sigma = common_bw_cat23,
positive = TRUE,dimyx=256)
npoints(X_Accident.categories_2)/npoints(X_Accident.categories_3)
common_bw_car01 <- LSCV.risk(as.ppp(X_Accident.with.a.car_0),
as.ppp(X_Accident.with.a.car_1),
method = "hazelton",hlim = c(0,3000))
table(X$data$Accident.with.a.car)
X_Accident.with.a.car <- X
marks(X_Accident.with.a.car) <- as.numeric(X$data$Accident.with.a.car)
X_Accident.with.a.car$data$marks
X_Accident.with.a.car_0 <- X_Accident.with.a.car[X_Accident.with.a.car$data$marks==0]
X_Accident.with.a.car_1 <- X_Accident.with.a.car[X_Accident.with.a.car$data$marks==1]
npoints(X_Accident.with.a.car_0)
#[1] 31
npoints(X_Accident.with.a.car_1)
common_bw_car01 <- LSCV.risk(as.ppp(X_Accident.with.a.car_0),
as.ppp(X_Accident.with.a.car_1),
method = "hazelton",hlim = c(0,3000))
d_X_Accident.with.a.car_0 <- densityQuick.lpp(unmark(X_Accident.with.a.car_0), sigma = common_bw_car01,
positive = TRUE,dimyx=256)
d_X_Accident.with.a.car_1 <- densityQuick.lpp(unmark(X_Accident.with.a.car_1), sigma = common_bw_car01,
positive = TRUE,dimyx=256)
#################################################
#################################################
################################################# Relative Risk - Pedestrian
#################################################
#################################################
table(X$data$Accident.with.a.pedestrian)
X_Accident.with.a.pedestrian <- X
marks(X_Accident.with.a.pedestrian) <- as.numeric(X$data$Accident.with.a.pedestrian)
X_Accident.with.a.pedestrian$data$marks
X_Accident.with.a.pedestrian_0 <- X_Accident.with.a.pedestrian[X_Accident.with.a.pedestrian$data$marks==0]
X_Accident.with.a.pedestrian_1 <- X_Accident.with.a.pedestrian[X_Accident.with.a.pedestrian$data$marks==1]
common_bw_pedestrian10 <- LSCV.risk(as.ppp(X_Accident.with.a.pedestrian_1),
as.ppp(X_Accident.with.a.pedestrian_0),
method = "hazelton",hlim = c(0,3000))
d_X_Accident.with.a.pedestrian_0 <- densityQuick.lpp(unmark(X_Accident.with.a.pedestrian_0), sigma = common_bw_pedestrian10,
positive = TRUE,dimyx=256)
d_X_Accident.with.a.pedestrian_1 <- densityQuick.lpp(unmark(X_Accident.with.a.pedestrian_1), sigma = common_bw_pedestrian10,
positive = TRUE,dimyx=256)
#################################################
#################################################
################################################# Relative Risk - Road Conditions
#################################################
#################################################
table(X$data$Road.condition)
X_Road.condition <- X
marks(X_Road.condition) <- as.numeric(X$data$Road.condition)
X_Road.condition$data$marks
X_Road.condition_0 <- X_Road.condition[X_Road.condition$data$marks==0]
X_Road.condition_1 <- X_Road.condition[X_Road.condition$data$marks==1]
common_bw_road10 <- LSCV.risk(as.ppp(X_Road.condition_1),
as.ppp(X_Road.condition_0),
method = "hazelton",hlim = c(0,3000)) # hlim depends on the pattern, usually not given, but if it detects the largest bw in the automatic range, then we need to give a large one to make sure about the selected bw.
d_X_Road.condition_0 <- densityQuick.lpp(unmark(X_Road.condition_0), sigma = common_bw_road10,
positive = TRUE,dimyx=256)
d_X_Road.condition_1 <- densityQuick.lpp(unmark(X_Road.condition_1), sigma = common_bw_road10,
positive = TRUE,dimyx=256)
p_cat <- plot(d_X_Accident.categories_2/d_X_Accident.categories_3,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
p_car <- plot(d_X_Accident.with.a.car_0/d_X_Accident.with.a.car_1,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
p_pedestrian <- plot(d_X_Accident.with.a.pedestrian_1/d_X_Accident.with.a.pedestrian_0,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
p_road <- plot(d_X_Road.condition_1/d_X_Road.condition_0,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
RR_car  <- d_X_Accident.with.a.car_0/d_X_Accident.with.a.car_1
RR_pede <- d_X_Accident.with.a.pedestrian_1/d_X_Accident.with.a.pedestrian_0
RR_cat  <- d_X_Accident.categories_2/d_X_Accident.categories_3
RR_road <- d_X_Road.condition_1/d_X_Road.condition_0
im_RR_car <- raster(as.im(RR_car))
im_RR_pede <- raster(as.im(RR_pede))
im_RR_cat <- raster(as.im(RR_cat))
im_RR_road <- raster(as.im(RR_road))
sp_im_RR_car <- spplot(im_RR_car,at=as.vector(quantile(im_RR_car,seq(0,1,len=40))),col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
sp_im_RR_pede <- spplot(im_RR_pede,at=as.vector(quantile(im_RR_pede,seq(0,1,len=40))),col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
sp_im_RR_cat <- spplot(im_RR_cat,at=as.vector(quantile(im_RR_cat,seq(0,1,len=40))),col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
sp_im_RR_road <- spplot(im_RR_road,at=as.vector(quantile(im_RR_road,seq(0,1,len=40))),col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road,ncol=2)
library(gridExtra)
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road,ncol=2)
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
?grid.arrange
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road,top = quote(paste("page", g, "of",
npages)))
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
setwd("C:/Users/Parsa/Desktop")
png("aa",height = 800,width = 800)
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
dev.off()
png("aa",height = 800,width = 800)
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
dev.off()
png("aa.png",height = 800,width = 800)
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
dev.off()
png("aa.png",height = 600,width = 800)
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
dev.off()
png("aa.png",height = 600,width = 600)
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
dev.off()
png("aa.png",height = 500,width = 800)
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
dev.off()
setwd("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/images - relative risk")
png("RR_marks.png",height = 500,width = 800)
grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
dev.off()
pp <- grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
View(X_unmark)
X_unmark$data
X$data
X
X$data$N_Vehicle
ggplot()+
geom_point(x=X$data$N_Vehicle)
X$data %>%
ggplot(N_vehicle)
X$data %>%
ggplot(aes(x = gdpPercap, y=lifeExp))
X$data %>%
ggplot(aes(x = N_Vehicle, y=lifeExp))
X$data %>%
ggplot(aes(x = N_Vehicle))
names(X$data)
X$data %>%
group_by(Month) %>%
summarize(Accident_count=n_distinct(ID)) %>%
ggplot(aes(x=Month, y=Accident_count)) +
geom_bar(stat="identity", fill=c("red","blue"))+
geom_line(size = 1.5, alpha = 0.7, color = "red", group=1) +
geom_point(size = 1) +
scale_x_discrete(labels = c('Jan','Feb','Mar','Apr','May','June','July',
'Aug','Sep','Oct','Nov','Dec'))+
ylab('Number of Accident')+
theme(axis.text.x = element_text(size = 21),
axis.text.y = element_text(size = 21),axis.title = element_text(size = 21))
X$data$ID
X$data %>%
summarize(Accident_count=n_distinct(ID)) %>%
ggplot(aes(x=Month, y=Accident_count)) +
geom_bar(stat="identity", fill=c("red","blue"))+
geom_line(size = 1.5, alpha = 0.7, color = "red", group=1) +
geom_point(size = 1) +
scale_x_discrete(labels = c('Jan','Feb','Mar','Apr','May','June','July',
'Aug','Sep','Oct','Nov','Dec'))+
ylab('Number of Accident')+
theme(axis.text.x = element_text(size = 21),
axis.text.y = element_text(size = 21),axis.title = element_text(size = 21))
X$data %>%
ggplot(aes(x=Month, y=N_Vehicle)) +
geom_bar(stat="identity", fill=c("red","blue"))+
geom_line(size = 1.5, alpha = 0.7, color = "red", group=1) +
geom_point(size = 1) +
scale_x_discrete(labels = c('Jan','Feb','Mar','Apr','May','June','July',
'Aug','Sep','Oct','Nov','Dec'))+
ylab('Number of Accident')+
theme(axis.text.x = element_text(size = 21),
axis.text.y = element_text(size = 21),axis.title = element_text(size = 21))
plot(X$data$N_Vehicle)
plot(X$data[,"N_Vehicle"])
class(X$data)
aa <- unlist(X$data)
aa
aa <- unlist(X$data$N_Vehicle)
class(aa)
aa
ggplot(aes(x = aa))
pp <- grid.arrange(sp_im_RR_car,sp_im_RR_pede,sp_im_RR_cat,sp_im_RR_road)
plot3D::persp3D(x= K$r/1000,y= K$t,z= K$Kinhom/1000,theta=40,phi=10,
facets=FALSE,col="red",ticktype= "detailed",bty = "g",
xlab="r = distance",ylab="t = time",zlab="",
main=expression(italic({hat(K)[LI]^{ST}}(r,t))),
nticks=6,cex.axis=1.5,cex.lab=2, cex.main=2,lwd=2,
zlim= range(c(min(minEnv,K$Kinhom),max(maxEnv,K$Kinhom)))/1000,
resfac=4)
load("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/Second_Order.RData")
Rmat <- array(as.numeric(unlist(R)), dim=c(10, 10, 99))
R_low <- apply(Rmat, 1:2,function(i){quantile(i,0.025)})
R_up <- apply(Rmat, 1:2,function(i){quantile(i,0.975)})
minEnv <- R_low
maxEnv <- R_up
plot3D::persp3D(x= K$r/1000,y= K$t,z= K$Kinhom/1000,theta=40,phi=10,
facets=FALSE,col="red",ticktype= "detailed",bty = "g",
xlab="r = distance",ylab="t = time",zlab="",
main=expression(italic({hat(K)[LI]^{ST}}(r,t))),
nticks=6,cex.axis=1.5,cex.lab=2, cex.main=2,lwd=2,
zlim= range(c(min(minEnv,K$Kinhom),max(maxEnv,K$Kinhom)))/1000,
resfac=4)
d_X_hour_new_linim <- density(X_hour_new)
load("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/Second_Order.RData")
load("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/Second_Order.RData")
plot3D::persp3D(x= K$r/1000,y= K$t,z= K$Kinhom/1000,theta=40,phi=10,
facets=FALSE,col="red",ticktype= "detailed",bty = "g",
xlab="r = distance",ylab="t = time",zlab="",
main=expression(italic({hat(K)[LI]^{ST}}(r,t))),
nticks=6,cex.axis=1.5,cex.lab=2, cex.main=2,lwd=2,
zlim= range(c(min(minEnv,K$Kinhom),max(maxEnv,K$Kinhom)))/1000,
resfac=4)
load("C:/Users/Parsa/Desktop/Kreza.RData")
