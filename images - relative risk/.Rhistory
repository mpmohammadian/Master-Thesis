axis.text.y = element_text(size = 21),axis.title = element_text(size = 21))
HIA_c_df%>%
group_by(UMONAT) %>%
summarize(Accident_count=n_distinct(ID)) %>%
ggplot(aes(x=UMONAT, y=Accident_count)) +
geom_bar(stat="identity", fill=c("red","blue"))+
geom_line(size = 1.5, alpha = 0.7, color = "red", group=1) +
geom_point(size = 1) +
scale_x_discrete(labels = c('Jan','Feb','Mar','Apr','May','June','July',
'Aug','Sep','Oct','Nov','Dec'))+
ylab('Number of Accident')+
theme(axis.text.x = element_text(size = 21),
axis.text.y = element_text(size = 21),axis.title = element_text(size = 21))
HIA_c_df%>%
group_by(UMONAT) %>%
summarize(Accident_count=n_distinct(ID)) %>%
ggplot(aes(x="UMONAT", y=Accident_count)) +
geom_bar(stat="identity", fill=c("red","blue"))+
geom_line(size = 1.5, alpha = 0.7, color = "red", group=1) +
geom_point(size = 1) +
scale_x_discrete(labels = c('Jan','Feb','Mar','Apr','May','June','July',
'Aug','Sep','Oct','Nov','Dec'))+
ylab('Number of Accident')+
theme(axis.text.x = element_text(size = 21),
axis.text.y = element_text(size = 21),axis.title = element_text(size = 21))
HIA_c_df%>%
group_by("UMONAT") %>%
summarize(Accident_count=n_distinct(ID)) %>%
ggplot(aes(x=UMONAT, y=Accident_count)) +
geom_bar(stat="identity", fill=c("red","blue"))+
geom_line(size = 1.5, alpha = 0.7, color = "red", group=1) +
geom_point(size = 1) +
scale_x_discrete(labels = c('Jan','Feb','Mar','Apr','May','June','July',
'Aug','Sep','Oct','Nov','Dec'))+
ylab('Number of Accident')+
theme(axis.text.x = element_text(size = 21),
axis.text.y = element_text(size = 21),axis.title = element_text(size = 21))
ggplot(aes(x = UMONAT, fill = UWOCHENTAG), data = HIA_c_df) +
geom_bar(stat = 'count', position = position_dodge(preserve="single")) +
xlab('Weekday') +
ylab('Number of Accidents') +
theme(text = element_text(size = 20))+
scale_fill_discrete(labels = c('Sun.','Mon.','Tue.','Wed.','Thu.','Fri.','Sat.'))+
scale_x_discrete(labels = c('Jan','Feb','Mar','Apr','May','June','July',
'Aug','Sep','Oct','Nov','Dec'))+
ggtitle('')
ggplot(aes(x = UMONAT, fill = UWOCHENTAG), data = HIA_c_df) +
geom_bar(stat = 'count', position = position_dodge(preserve="single")) +
xlab('Weekday') +
ylab('Number of Accidents') +
theme(text = element_text(size = 20))+
scale_fill_discrete(labels = c('Sun.','Mon.','Tue.','Wed.','Thu.','Fri.','Sat.'))+
scale_x_discrete(labels = c('Jan','Feb','Mar','Apr','May','June','July',
'Aug','Sep','Oct','Nov','Dec'))+
ggtitle('')
setwd("C:/Users/Parsa/Desktop/Unfallorte2019_EPSG25832_Shape/Shapefile")
#################################################
#################################################
################################################# load data
#################################################
#################################################
#Shapefile Accident
setwd("C:/Users/Parsa/Desktop/Unfallorte2019_EPSG25832_Shape/Shapefile")
DEA_19 <- read_sf("Unfallorte2019_LinRef.shp")
DEA_19 <- st_zm(DEA_19)
View(DEA_19)
setwd("C:/Users/Parsa/Desktop/Unfallorte2016_EPSG25832_Shape/Shapefile")
DEA_16 <- read_sf("Unfallorte2016_LinRef.shp")
#################################################
#################################################
################################################# load data
#################################################
#################################################
#Shapefile Accident
setwd("C:/Users/Parsa/Desktop/Unfallorte2016_EPSG25832_Shape/Shapefile")
DEA_16 <- read_sf("Unfaelle_2016_LinRef.shp")
DEA_16 <- st_zm(DEA_16)
DEA_16  <- st_transform(DEA_16,3857)
###################################
HIA_16 <- st_intersection(DEA_16,roi.hi)
HIA_16 <- st_as_sf(HIA_16)
HIA_16 <- subset(HIA_16,HIA_16$UGEMEINDE=="021")
HIA_16 <- subset(HIA_16,HIA_16$UGEMEINDE==021)
View(DEA_16)
###################################
HIA_16 <- st_intersection(DEA_16,roi.hi)
DEA_16
plot(roi.de)
###################################
HIA_16 <- st_intersection(DEA_16,roi.hi)
View(HIA_16)
View(DEA_19)
View(DEA_16)
View(DEA)
setwd("C:/Users/Parsa/Desktop/Unfallorte2018_EPSG25832_Shape/Shapefile")
setwd("C:/Users/Parsa/Desktop/Unfallorte2019_EPSG25832_Shape/Shapefile")
#################################################
#################################################
################################################# load data
#################################################
#################################################
#Shapefile Accident
setwd("C:/Users/Parsa/Desktop/Unfallorte2016_EPSG25832_Shape/Shapefile")
DEA_16 <- read_sf("Unfaelle_2016_LinRef.shp")
DEA_16 <- st_zm(DEA_16)
setwd("C:/Users/Parsa/Desktop/Unfallorte2018_EPSG25832_Shape/Shapefile")
DEA_18 <- read_sf("Unfallorte2018_LinRef.shp")
DEA_18 <- st_zm(DEA_18)
setwd("C:/Users/Parsa/Desktop/Unfallorte2019_EPSG25832_Shape/Shapefile")
DEA_19 <- read_sf("Unfallorte2019_LinRef.shp")
DEA_19  <- st_transform(DEA_19,3857)
View(DEA_16)
View(DEA_18)
View(DEA_19)
###################################2016
HIA_16 <- st_intersection(DEA_16,roi.hi)
#####################################
roi.de <- raster::getData(name = "GADM", country = "Germany", level = 2)
roi.hi <- subset(roi.de, NAME_2 == "Hildesheim")
roi.hi <- st_as_sf(roi.hi)
roi.hi <- st_transform(roi.hi,3857)
plot(roi.de$NAME_2)
plot(roi.de[,"NAME_2"])
plot(roi.hi[,"NAME_2"])
###################################2016
HIA_16 <- st_intersection(DEA_16,roi.hi)
HIA_16 <- st_as_sf(HIA_16)
###################################2016
HIA_16 <- st_intersection(DEA_16,roi.hi)
###################################2016
st_crs(roi.hi)<-st_crs(DEA_16)
HIA_16 <- st_intersection(DEA_16,roi.hi)
HIA_16 <- st_as_sf(HIA_16)
HIA_16 <- subset(HIA_16,HIA_16$UGEMEINDE==021)
HIA$ID <- 1:nrow(HIA_16)
HIA_16$ID <- 1:nrow(HIA_16)
HIA_16$ID <- 1:321
plot(HIA_16[,"UTYP1"])
#NA value(s) in bounding box. Trying to plot empty geometries?
###################################2018
HIA_18 <- st_intersection(DEA_18,roi.hi)
HIA_18 <- st_as_sf(HIA_18)
HIA_18 <- subset(HIA_18,HIA_18$UGEMEINDE==021)
HIA$ID <- 1:nrow(HIA_18)
HIA_18$ID <- 1:nrow(HIA_18)
nrow(HIA_18)
#NA value(s) in bounding box. Trying to plot empty geometries?
###################################2018
HIA_18 <- st_intersection(DEA_18,roi.hi)
HIA_18 <- st_as_sf(HIA_18)
HIA_18 <- subset(HIA_18,HIA_18$UGEMEINDE=="021")
#NA value(s) in bounding box. Trying to plot empty geometries?
###################################2018
HIA_18 <- st_intersection(DEA_18,roi.hi)
HIA_18 <- st_as_sf(HIA_18)
roi.hi <- subset(roi.de, NAME_2 == "Hildesheim")
roi.hi <- st_as_sf(roi.hi)
roi.hi <- st_transform(roi.hi,3857)
#NA value(s) in bounding box. Trying to plot empty geometries?
###################################2018
HIA_18 <- st_intersection(DEA_18,roi.hi)
#################################################
#################################################
################################################# load data
#################################################
#################################################
#Shapefile Accident
setwd("C:/Users/Parsa/Desktop/Unfallorte2016_EPSG25832_Shape/Shapefile")
DEA_16 <- read_sf("Unfaelle_2016_LinRef.shp")
DEA_16  <- st_transform(DEA_16,3857)
DEA_16 <- st_zm(DEA_16)
setwd("C:/Users/Parsa/Desktop/Unfallorte2018_EPSG25832_Shape/Shapefile")
DEA_18 <- read_sf("Unfallorte2018_LinRef.shp")
DEA_18  <- st_transform(DEA_18,3857)
DEA_18 <- st_zm(DEA_18)
setwd("C:/Users/Parsa/Desktop/Unfallorte2019_EPSG25832_Shape/Shapefile")
DEA_19 <- read_sf("Unfallorte2019_LinRef.shp")
DEA_19  <- st_transform(DEA_19,3857)
DEA_19 <- st_zm(DEA_19)
#####################################
roi.de <- raster::getData(name = "GADM", country = "Germany", level = 2)
roi.hi <- subset(roi.de, NAME_2 == "Hildesheim")
roi.hi <- st_as_sf(roi.hi)
roi.hi <- st_transform(roi.hi,3857)
###################################2019
HIA_19 <- st_intersection(DEA_19,roi.hi)
HIA_19 <- st_as_sf(HIA_19)
HIA_19 <- subset(HIA_19,HIA_19$UGEMEINDE==021)
#####################################
roi.de <- raster::getData(name = "GADM", country = "Germany", level = 2)
roi.hi <- subset(roi.de, NAME_2 == "Hildesheim")
roi.hi <- st_as_sf(roi.hi)
roi.hi <- st_transform(roi.hi,3857)
HIA_16 <- st_intersection(DEA_16,roi.hi)
HIA_16 <- st_as_sf(HIA_16)
HIA_16 <- subset(HIA_16,HIA_16$UGEMEINDE==021)
plot(HIA_16[,"UTYP1"])
#NA value(s) in bounding box. Trying to plot empty geometries?
###################################2018
HIA_18 <- st_intersection(DEA_18,roi.hi)
HIA_18 <- st_as_sf(HIA_18)
HIA_18 <- subset(HIA_18,HIA_18$UGEMEINDE=="021")
nrow(HIA_18)
# nrow(HIA_18)
# [1] 321
HIA_18$ID <- 1:nrow(HIA_18)
plot(HIA_18[,"UTYP1"])
#plot(HIA_18[,"UTYP1"])
###################################2019
HIA_19 <- st_intersection(DEA_19,roi.hi)
HIA_19 <- st_as_sf(HIA_19)
HIA_19 <- subset(HIA_19,HIA_19$UGEMEINDE==021)
View(DEA_19)
#HIA_19 <- subset(HIA_19,HIA_19$UGEMEINDE==021)
#HIA$ID <- 1:nrow(HIA_19)
plot(HIA_19)
#HIA_19 <- subset(HIA_19,HIA_19$UGEMEINDE==021)
#HIA$ID <- 1:nrow(HIA_19)
plot(HIA_19[,"NAME_2"])
nrow(HIA_19)
bbox(HIA_18)
st_bbox(HIA_18)
p <- polygon(st_bbox(HIA_18))
x_coord=c(9.898652,10.003366,10.003366,9.898652,9.898652)
y_coord=c(52.183629,52.183629,52.1068,52.1068,52.183629)
xym <- cbind(x_coord, y_coord)
pp = Polygon(xym)
x_coord=c(1097234,1117760)
y_coord=c(6819997,6844917)
xym <- cbind(x_coord, y_coord)
pp = Polygon(xym)
ps = Polygons(list(p),1)
plot(st_bbox(hia_18))
plot(st_bbox(HIA_18))
st_bbox(HIA_18)
x_coord <- c(1097234,1117760,1117760,1097234,1097234)
y_coord <- c(6844917,6844917,6819997,6819997,6844917)
xym <- cbind(x_coord, y_coord)
p = Polygon(xym)
ps = Polygons(list(p),1)
sps = SpatialPolygons(list(ps))
plot(sps)
proj4string(sps) = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
sps = st_set_crs(sps, "+proj=utm +zone=19 +ellps=GRS80 +datum=NAD83")
class(sps)
st_crs(sps)
st_crs(sps)<-st_crs(HIA_19)
sps <- st_transform(sps,3857)
sps <- as(sps,"Spatial")
proj4string(sps) = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
sps <- st_transform(sps,3857)
st_crs(sps)<-st_crs(HIA_19)
sps = SpatialPolygons(list(ps))
View(sps)
st_crs(sps)
class(sps)
crs(sps) <- "+proj=lcc +lat_1=48 +lat_2=33 +lon_0=-100 +datum=WGS84"
sps <- st_as_sf(sps)
sps <- st_transform(sps,3857)
HIA_19 <- st_intersection(HIA_19,sps)
#plot(HIA_18[,"UTYP1"])
###################################2019
HIA_19 <- st_intersection(DEA_19,roi.hi)
HIA_19 <- st_as_sf(HIA_19)
HIA_19 <- st_intersection(DEA_19,sps)
class(sps)
class(DEA_19)
plot(sps)
st_bbox(sps)
st_bbox(DEA_19)
st_bbox(HIA_18)
#plot(HIA_18[,"UTYP1"])
###################################2019
HIA_19 <- st_intersection(DEA_19,roi.hi)
HIA_19 <- st_as_sf(HIA_19)
HIA_18_df<- as.data.frame(HIA_18)
HIA_c_df$UMONAT <- as.numeric(HIA_c_df$UMONAT)
HIA_18_df$UMONAT <- as.numeric(HIA_18_df$UMONAT)
hist(HIA_18[,"UMONAT"])
hist(HIA_18[,UMONAT])
hist(HIA_18_df[,"UMONAT"])
hist(HIA_18_df[,"UMONAT"])
HIA_18_df1<-HIA_18_df
table(HIA_18_df$UMONAT)
HIA_18_df$UMONAT <- ifelse(HIA_18_df$UMONAT==2,13,HIA_18_df$UMONAT)
HIA_18_df$UMONAT <- ifelse(HIA_18_df$UMONAT==1,14,HIA_18_df$UMONAT)
HIA_18_df$UMONAT <- ifelse(HIA_18_df$UMONAT==1,14,HIA_18_df$UMONAT)
HIA_18_df$UMONAT <- ifelse(HIA_18_df$UMONAT==3,15,HIA_18_df$UMONAT)
HIA_18_df$UMONAT <- ifelse(HIA_18_df$UMONAT==13,1,HIA_18_df$UMONAT)
HIA_18_df$UMONAT <- ifelse(HIA_18_df$UMONAT==14,3,HIA_18_df$UMONAT)
HIA_18_df$UMONAT <- ifelse(HIA_18_df$UMONAT==15,2,HIA_18_df$UMONAT)
hist(HIA_18_df[,"UMONAT"])
HIA_18_df<- as.data.frame(HIA_18)
hist(HIA_18_df[,"UMONAT"],breaks=12)
hist(HIA_18_df[,"UMONAT"])
HIA_18_df$UMONAT <- as.numeric(HIA_18_df$UMONAT)
hist(HIA_18_df[,"UMONAT"])
hist(HIA_18_df[,"UMONAT"],breaks=12)
hist(HIA_18_df[,"UMONAT"],break=12)
hist(HIA_18_df[,"UMONAT"],breaks=120)
hist(HIA_18_df[,"UMONAT"],breaks=100)
hist(HIA_18_df[,"UMONAT"],breaks=50)
View(HIA_18_df)
HIA_18_df[1,6]<- 2
HIA_18_df[2:4,6]<- 2
hist(HIA_18_df[,"UMONAT"],breaks=50)
HIA_18_df[5:7,6]<- 3
hist(HIA_18_df[,"UMONAT"],breaks=50)
HIA_18[1,6]<- 2
View(HIA_16)
HIA_18_df$UWOCHENTAG<- as.numeric(HIA_18_df$UWOCHENTAG)
hist(HIA_18_df[,"UWOCHENTAG"])
HIA_18_df$UWOCHENTAG1 <- ifelse(HIA_18_df$UWOCHENTAG==3,9,HIA_18_df$UWOCHENTAG)
HIA_18_df$UWOCHENTAG1 <- ifelse(HIA_18_df$UWOCHENTAG==4,8,HIA_18_df$UWOCHENTAG1)
table(HIA_18_df$UWOCHENTAG1)
HIA_18_df$UWOCHENTAG1 <- ifelse(HIA_18_df$UWOCHENTAG1==8,3,HIA_18_df$UWOCHENTAG1)
HIA_18_df$UWOCHENTAG1 <- ifelse(HIA_18_df$UWOCHENTAG1==9,4,HIA_18_df$UWOCHENTAG1)
table(HIA_18_df$UWOCHENTAG1)
HIA_18_df$UWOCHENTAG <- HIA_18_df$UWOCHENTAG1
table(HIA_18_df$UWOCHENTAG1)
table(HIA_18_df$UWOCHENTAG)
HIA_18_df <- HIA_18_df[1:38]
View(HIA_18_df1)
rm(HIA_18_df1)
rm(p)
rm(pp)
rm(ps)
rm(sps)
rm(xym)
rm(x_coord)
rm(y_coord)
hist(HIA_18_df[,"UWOCHENTAG"])
View(HIA_19)
load("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/Second_Order.RData")
#load("D:/GEO-C/Github/Honnover-Analysis/HI_AC_LN_ppp/HI_LN_AC_unique.RData")
load("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/HI_LN_AC_unique.RData") ###  main
X <- HI_LN_AC_unique
X_unmark <- unmark(X)
npoints(X_unmark)
month <- as.numeric(X$data$Month)
X_month <- as.stlpp(X_unmark,t=month)
d_X_month <- density(X_month,dimyx=256)
plot(attr(d_X_month,"tempden")) # density plot
mgrid <- attr(d_X_month,"tempden")$x
m1 <- which(mgrid<3.5)
m2 <- which(mgrid>=3.5 & mgrid<6.5)
m3 <- which(mgrid>=6.5 & mgrid<9.5)
m4 <- which(mgrid>=9.5 )
out_m_1 <- d_X_month[[1]]
for (j in m1) {
out_m_1 <- out_m_1+d_X_month[[j]]
}
out_m_1 <- out_m_1 -  d_X_month[[1]]
out_m_2 <- d_X_month[[2]]
for (j in m2) {
out_m_2 <- out_m_2+d_X_month[[j]]
}
out_m_2 <- out_m_2 -  d_X_month[[2]]
out_m_3 <- d_X_month[[3]]
for (j in m3) {
out_m_3 <- out_m_3+d_X_month[[j]]
}
out_m_3 <- out_m_3 -  d_X_month[[3]]
out_m_4 <- d_X_month[[4]]
for (j in m4) {
out_m_4 <- out_m_4+d_X_month[[j]]
}
out_m_4 <- out_m_4 -  d_X_month[[4]]
im_d_m_1 <- raster(as.im(out_m_1))
im_d_m_2 <- raster(as.im(out_m_2))
im_d_m_3 <- raster(as.im(out_m_3))
im_d_m_4 <- raster(as.im(out_m_4))
out_m_stack <- stack(im_d_m_1,im_d_m_2,im_d_m_3,im_d_m_4)
names(out_m_stack)<- c("Jan_March","Apr_Jun","Jul_Sep","Oct_Dec")
qtss_m <- as.vector(sort(c(quantile(im_d_m_1*1000,seq(0,1,len=20)),
quantile(im_d_m_2*1000,seq(0,1,len=20)),
quantile(im_d_m_3*1000,seq(0,1,len=20)),
quantile(im_d_m_4*1000,seq(0,1,len=20)))))
setwd("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/images - temporal intensity")
png("im_d_m.png",height = 800,width = 800)
spplot(out_m_stack*1000,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
X$data$Type.of.accident
X$data$Accident.categories
X_Accident.categories <- X
marks(X_Accident.categories) <- as.numeric(X$data$Accident.categories)
X_Accident.categories$data$marks
X_Accident.categories_1 <- X_Accident.categories[X_Accident.categories$data$marks==1]
X_Accident.categories_2 <- X_Accident.categories[X_Accident.categories$data$marks==2]
X_Accident.categories_3 <- X_Accident.categories[X_Accident.categories$data$marks==3]
npoints(X_Accident.categories_1)
#[1] 3
npoints(X_Accident.categories_2)
#[1] 26
npoints(X_Accident.categories_3)
common_bw_cat23 <- LSCV.risk(as.ppp(X_Accident.categories_2),
as.ppp(X_Accident.categories_3),
method = "hazelton",hlim = c(0,3000)) # hlim depends on the pattern, usually not given, but if it detects the largest bw in the automatic range, then we need to give a large one to make sure about the selectedd bw.
d_X_Accident.categories_2 <- densityQuick.lpp(unmark(X_Accident.categories_2), sigma = common_bw_cat23,
positive = TRUE,dimyx=256)
d_X_Accident.categories_3 <- densityQuick.lpp(unmark(X_Accident.categories_3), sigma = common_bw_cat23,
positive = TRUE,dimyx=256)
npoints(X_Accident.categories_2)/npoints(X_Accident.categories_3)
table(X$data$Accident.with.a.car)
X_Accident.with.a.car <- X
marks(X_Accident.with.a.car) <- as.numeric(X$data$Accident.with.a.car)
X_Accident.with.a.car$data$marks
X_Accident.with.a.car_0 <- X_Accident.with.a.car[X_Accident.with.a.car$data$marks==0]
X_Accident.with.a.car_1 <- X_Accident.with.a.car[X_Accident.with.a.car$data$marks==1]
common_bw_car01 <- LSCV.risk(as.ppp(X_Accident.with.a.car_0),
as.ppp(X_Accident.with.a.car_1),
method = "hazelton",hlim = c(0,3000))
d_X_Accident.with.a.car_0 <- densityQuick.lpp(unmark(X_Accident.with.a.car_0), sigma = common_bw_car01,
positive = TRUE,dimyx=256)
d_X_Accident.with.a.car_1 <- densityQuick.lpp(unmark(X_Accident.with.a.car_1), sigma = common_bw_car01,
positive = TRUE,dimyx=256)
#################################################
#################################################
################################################# Relative Risk - Pedestrian
#################################################
#################################################
table(X$data$Accident.with.a.pedestrian)
X_Accident.with.a.pedestrian <- X
marks(X_Accident.with.a.pedestrian) <- as.numeric(X$data$Accident.with.a.pedestrian)
X_Accident.with.a.pedestrian$data$marks
X_Accident.with.a.pedestrian_0 <- X_Accident.with.a.pedestrian[X_Accident.with.a.pedestrian$data$marks==0]
X_Accident.with.a.pedestrian_1 <- X_Accident.with.a.pedestrian[X_Accident.with.a.pedestrian$data$marks==1]
npoints(X_Accident.with.a.pedestrian_0)
#[1] 275
npoints(X_Accident.with.a.pedestrian_1)
common_bw_pedestrian10 <- LSCV.risk(as.ppp(X_Accident.with.a.pedestrian_1),
as.ppp(X_Accident.with.a.pedestrian_0),
method = "hazelton",hlim = c(0,3000))
d_X_Accident.with.a.pedestrian_0 <- densityQuick.lpp(unmark(X_Accident.with.a.pedestrian_0), sigma = common_bw_pedestrian10,
positive = TRUE,dimyx=256)
d_X_Accident.with.a.pedestrian_1 <- densityQuick.lpp(unmark(X_Accident.with.a.pedestrian_1), sigma = common_bw_pedestrian10,
positive = TRUE,dimyx=256)
npoints(X_Accident.with.a.pedestrian_1)/npoints(X_Accident.with.a.pedestrian_0)
#################################################
#################################################
################################################# Relative Risk - Road Conditions
#################################################
#################################################
table(X$data$Road.condition)
X_Road.condition <- X
marks(X_Road.condition) <- as.numeric(X$data$Road.condition)
X_Road.condition$data$marks
X_Road.condition_0 <- X_Road.condition[X_Road.condition$data$marks==0]
X_Road.condition_1 <- X_Road.condition[X_Road.condition$data$marks==1]
plot(unmark(X_Road.condition_0),pch=20,cols=2,col=4,main="",cex=2.5)
plot(unmark(X_Road.condition_1),pch=20,cols=2,col=4,main="",cex=2.5)
npoints(X_Road.condition_0)
#[1] 224
npoints(X_Road.condition_1)
common_bw_road10 <- LSCV.risk(as.ppp(X_Road.condition_1),
as.ppp(X_Road.condition_0),
method = "hazelton",hlim = c(0,3000)) # hlim depends on the pattern, usually not given, but if it detects the largest bw in the automatic range, then we need to give a large one to make sure about the selected bw.
d_X_Road.condition_0 <- densityQuick.lpp(unmark(X_Road.condition_0), sigma = common_bw_road10,
positive = TRUE,dimyx=256)
d_X_Road.condition_1 <- densityQuick.lpp(unmark(X_Road.condition_1), sigma = common_bw_road10,
positive = TRUE,dimyx=256)
p_cat <- plot(d_X_Accident.categories_2/d_X_Accident.categories_3,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
p_car <- plot(d_X_Accident.with.a.car_0/d_X_Accident.with.a.car_1,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
p_pedestrian <- plot(d_X_Accident.with.a.pedestrian_1/d_X_Accident.with.a.pedestrian_0,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
p_road <- plot(d_X_Road.condition_1/d_X_Road.condition_0,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
RR_car  <- d_X_Accident.with.a.car_0/d_X_Accident.with.a.car_1
RR_pede <- d_X_Accident.with.a.pedestrian_1/d_X_Accident.with.a.pedestrian_0
RR_cat  <- d_X_Accident.categories_2/d_X_Accident.categories_3
RR_road <- d_X_Road.condition_1/d_X_Road.condition_0
im_RR_car <- raster(as.im(RR_car))
im_RR_pede <- raster(as.im(RR_pede))
im_RR_cat <- raster(as.im(RR_cat))
im_RR_road <- raster(as.im(RR_road))
sp_im_RR_car <- spplot(im_RR_car,at=as.vector(quantile(im_RR_car,seq(0,1,len=40))),col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
sp_im_RR_pede <- spplot(im_RR_pede,at=as.vector(quantile(im_RR_pede,seq(0,1,len=40))),col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
sp_im_RR_cat <- spplot(im_RR_cat,at=as.vector(quantile(im_RR_cat,seq(0,1,len=40))),col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
sp_im_RR_road <- spplot(im_RR_road,at=as.vector(quantile(im_RR_road,seq(0,1,len=40))),col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
sp_im_RR_car
setwd("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/images - relative risk")
png("RR_im_d_road.png",height = 800,width = 800)
par(mar=c(0,0,0,1))
sp_im_RR_car
dev.off()
png("RR_im_d_road.png",height = 500,width = 500)
par(mar=c(0,0,0,1))
sp_im_RR_car
dev.off()
png("RR_im_d_road.png",height = 400,width = 500)
par(mar=c(0,0,0,1))
sp_im_RR_car
dev.off()
png("im_rr_car.png",height = 400,width = 500)
par(mar=c(0,0,0,1))
sp_im_RR_car
dev.off()
png("im_rr_pedestrian.png",height = 400,width = 500)
par(mar=c(0,0,0,1))
sp_im_RR_pede
dev.off()
png("im_rr_category.png",height = 400,width = 500)
par(mar=c(0,0,0,1))
sp_im_RR_cat
dev.off()
png("im_rr_road.png",height = 400,width = 500)
par(mar=c(0,0,0,1))
sp_im_RR_road
dev.off()
