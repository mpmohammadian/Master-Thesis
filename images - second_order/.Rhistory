out_h_1 <- out_h_1 -  d_X_hour[[1]]
out_h_2 <- d_X_hour[[1]]
for (j in h2) {
out_h_2 <- out_h_2+d_X_hour[[j]]
}
out_h_2 <- out_h_2 -  d_X_hour[[1]]
out_h_3 <- d_X_hour[[1]]
for (j in h3) {
out_h_3 <- out_h_3+d_X_hour[[j]]
}
out_h_3 <- out_h_3 -  d_X_hour[[1]]
out_h_4 <- d_X_hour[[1]]
for (j in h4) {
out_h_4 <- out_h_4+d_X_hour[[j]]
}
out_h_4 <- out_h_4 -  d_X_hour[[1]]
out_h_5 <- d_X_hour[[1]]
for (j in h5) {
out_h_5 <- out_h_5+d_X_hour[[j]]
}
out_h_5 <- out_h_5 -  d_X_hour[[1]]
out_h_6 <- d_X_hour[[1]]
for (j in h6) {
out_h_6 <- out_h_6+d_X_hour[[j]]
}
out_h_6 <- out_h_6 -  d_X_hour[[1]]
out_h_7 <- d_X_hour[[1]]
for (j in h7) {
out_h_7 <- out_h_7+d_X_hour[[j]]
}
out_h_7 <- out_h_7 -  d_X_hour[[1]]
out_h_8 <- d_X_hour[[1]]
for (j in h8) {
out_h_8 <- out_h_8+d_X_hour[[j]]
}
out_h_8 <- out_h_8 -  d_X_hour[[1]]
im_d_h_1 <- raster(as.im(out_h_1))
im_d_h_2 <- raster(as.im(out_h_2))
im_d_h_3 <- raster(as.im(out_h_3))
im_d_h_4 <- raster(as.im(out_h_4))
im_d_h_5 <- raster(as.im(out_h_5))
im_d_h_6 <- raster(as.im(out_h_6))
im_d_h_7 <- raster(as.im(out_h_7))
im_d_h_8 <- raster(as.im(out_h_8))
out_h_stack <- stack(im_d_h_1,im_d_h_2,im_d_h_3,im_d_h_4,im_d_h_5,im_d_h_6,im_d_h_7,im_d_h_8)
names(out_h_stack)=c("Midnight_h3am","h3am_h6am)","h6am_h9am","h9am_Noon",
"Noon_h3pm","h3pm_h6pm","h6pm_h9pm","9pm_Midnight")
qtss_h <- as.vector(sort(c(quantile(im_d_h_1*1000,seq(0,1,len=20)),
quantile(im_d_h_2*1000,seq(0,1,len=20)),
quantile(im_d_h_3*1000,seq(0,1,len=20)),
quantile(im_d_h_4*1000,seq(0,1,len=20)),
quantile(im_d_h_5*1000,seq(0,1,len=20)),
quantile(im_d_h_6*1000,seq(0,1,len=20)),
quantile(im_d_h_7*1000,seq(0,1,len=20)),
quantile(im_d_h_8*1000,seq(0,1,len=20)))))
png("im_d_h.png",height = 500,width = 800)
spplot(out_h_stack*1000,at=qtss_h,col.regions=c(viridis(160),rep("#f03b20",2)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
out_h_stack <- stack(im_d_h_1,im_d_h_2,im_d_h_3,im_d_h_4,im_d_h_5,im_d_h_6,im_d_h_7,im_d_h_8)
names(out_h_stack)=c("Midnight_h3am","h3am_h6am)","h6am_h9am","h9am_Noon",
"Noon_h3pm","h3pm_h6pm","h6pm_h9pm","9pm_Midnight")
qtss_h <- as.vector(sort(c(quantile(im_d_h_1*1000,seq(0,1,len=20)),
quantile(im_d_h_2*1000,seq(0,1,len=20)),
quantile(im_d_h_3*1000,seq(0,1,len=20)),
quantile(im_d_h_4*1000,seq(0,1,len=20)),
quantile(im_d_h_5*1000,seq(0,1,len=20)),
quantile(im_d_h_6*1000,seq(0,1,len=20)),
quantile(im_d_h_7*1000,seq(0,1,len=20)),
quantile(im_d_h_8*1000,seq(0,1,len=20)))))
png("im_d_h.png",height = 500,width = 800)
spplot(out_h_stack*1000,at=qtss_h,col.regions=c(viridis(160),rep("#f03b20",2)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
setwd("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/images - temporal intensity")
png("im_d_h.png",height = 500,width = 800)
spplot(out_h_stack*1000,at=qtss_h,col.regions=c(viridis(160),rep("#f03b20",2)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
names(out_h_stack)=c("Midnight_h3am","h3am_h6am)","h6am_h9am","h9am_Noon",
"Noon_h3pm","h3pm_h6pm","h6pm_h9pm","h9pm_Midnight")
qtss_h <- as.vector(sort(c(quantile(im_d_h_1*1000,seq(0,1,len=20)),
quantile(im_d_h_2*1000,seq(0,1,len=20)),
quantile(im_d_h_3*1000,seq(0,1,len=20)),
quantile(im_d_h_4*1000,seq(0,1,len=20)),
quantile(im_d_h_5*1000,seq(0,1,len=20)),
quantile(im_d_h_6*1000,seq(0,1,len=20)),
quantile(im_d_h_7*1000,seq(0,1,len=20)),
quantile(im_d_h_8*1000,seq(0,1,len=20)))))
png("im_d_h.png",height = 500,width = 800)
spplot(out_h_stack*1000,at=qtss_h,col.regions=c(viridis(160),rep("#f03b20",2)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
dev.off()
load("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/Second_Order.RData")
Rmat <- do.call(cbind,R)
so <- lapply(X=1:513, function(i){
# a <- sort(Rmat[i,])[195]
# b <- sort(Rmat[i,])[5]
a=quantile(Rmat[i,],0.975)
b=quantile(Rmat[i,],0.025)
return(list(a,b))
})
so <- do.call(rbind,so)
load("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/Second_Order.RData")
Rmat <- do.call(cbind,R)
so <- lapply(X=1:513, function(i){
# a <- sort(Rmat[i,])[195]
# b <- sort(Rmat[i,])[5]
a=quantile(Rmat[i,],0.975)
b=quantile(Rmat[i,],0.025)
return(list(a,b))
})
so <- do.call(rbind,so)
R_up <- unlist(so[,1])# we would use %95 percent intervals at the end
R_low <- unlist(so[,2])
plot(K_X_unmark$r,K_X_unmark$est,type="n",ylim = c(0,max(R_up)),xlab = "r",ylab = "K") #,xlim=c(50,150),ylim=c(0.045,0.05))
setwd("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/images - second_order")
png("Second_Order.png",height = 600,width = 600)
gg <- ggplot()+
ylim(c(0,max(R_up/1000)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up/1000,rev(R_low/1000))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est/1000),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo/1000),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
dev.off()
png("Second_Order.png",height = 600,width = 600)
gg <- ggplot()+
ylim(c(0,max(R_up/1000)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up/1000,rev(R_low/1000))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est/1000),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo/1000),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
dev.off()
R_up <- unlist(so[,1])/1000# we would use %95 percent intervals at the end
R_low <- unlist(so[,2])/1000
png("Second_Order.png",height = 600,width = 600)
gg <- ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up/1000,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est/1000),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo/1000),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
dev.off()
png("Second_Order.png",height = 600,width = 600)
gg <- ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
dev.off()
R_up <- unlist(so[,1])# we would use %95 percent intervals at the end
R_low <- unlist(so[,2])
png("Second_Order.png",height = 600,width = 600)
gg <- ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
dev.off()
gg <- ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
gg <- ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
dev.off()
gg <- ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
png("Second_Order.png",height = 600,width = 600)
ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
dev.off()
R_up <- unlist(so[,1])/1000# we would use %95 percent intervals at the end
R_low <- unlist(so[,2])/1000
png("Second_Order.png",height = 600,width = 600)
ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est/1000),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo/1000),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
dev.off()
load("C:/Users/Parsa/Desktop/Kreza(leaveoff).RData")
load("C:/Users/Parsa/Desktop/Kreza(leaveoff).RData")
Rmat <- do.call(cbind,R)
so <- lapply(X=1:513, function(i){
# a <- sort(Rmat[i,])[195]
# b <- sort(Rmat[i,])[5]
a=quantile(Rmat[i,],0.975)
b=quantile(Rmat[i,],0.025)
return(list(a,b))
})
so <- do.call(rbind,so)
R_up <- unlist(so[,1])/1000# we would use %95 percent intervals at the end
R_low <- unlist(so[,2])/1000
ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est/1000),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo/1000),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
setwd("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/images - second_order")
png("Second_Order.png",height = 600,width = 600)
ggplot()+
ylim(c(0,max(R_up)))+
geom_polygon(aes(x=c(K_X_unmark$r/1000, rev(K_X_unmark$r/1000)),y=c(R_up,rev(R_low))),fill="grey54")+
geom_point(aes(x=K_X_unmark$r/1000,y=K_X_unmark$est/1000),size=2)+
geom_line(aes(x=K_X_unmark$r/1000,y=K_X_unmark$theo/1000),colour = "red",,lwd=0.5,lty=2)+
labs(x="Distance",y=expression(K[L-Inhom](r)))+
theme(text = element_text(size = 20))
dev.off()
?bw.scott.iso
densityQuick.lpp
?densityQuick.lpp
load("D:/Github/Honnover-Analysis/HI_AC_LN_ppp/HI_LN_AC_unique.RData")
HI_LN_AC_unique
X <- HI_LN_AC_unique
X_unmark <- unmark(X)
npoints(X_unmark)
### save plot of all data - unmarked
png("accidents.png",height = 800,width = 800)
par(mar=rep(0,4))
plot(X_unmark,pch=20,cols=2,col=4,main="",cex=2.5)
dev.off()
### Kernel
d_X_unmark <- densityQuick.lpp(X_unmark, sigma = bw.scott.iso(X_unmark),
positive = TRUE,dimyx=256,diggle = TRUE)
plot(d_X_unmark*1000,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
#####################################Images_kernel all data
im_d_ker <- raster(as.im(d_X_unmark))
qts_ker <- as.vector(sort(c(quantile(im_d_ker*1000,seq(0,1,len=40)))))
spplot(im_d_ker*1000,at=qts_ker,col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=16)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
### Kernel
d_X_unmark <- densityQuick.lpp(X_unmark, sigma = bw.scott.iso(X_unmark),
positive = TRUE,dimyx=256,diggle = TRUE,edge2D = TRUE)
#####################################Images_kernel all data
im_d_ker <- raster(as.im(d_X_unmark))
qts_ker <- as.vector(sort(c(quantile(im_d_ker*1000,seq(0,1,len=40)))))
spplot(im_d_ker*1000,at=qts_ker,col.regions=c(viridis(40),"#f03b20"),
par.settings=list(fontsize=list(text=16)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
table(X$data$Accident.with.a.car)
X_Accident.with.a.car <- X
marks(X_Accident.with.a.car) <- as.numeric(X$data$Accident.with.a.car)
X_Accident.with.a.car$data$marks
X_Accident.with.a.car_0 <- X_Accident.with.a.car[X_Accident.with.a.car$data$marks==0]
X_Accident.with.a.car_1 <- X_Accident.with.a.car[X_Accident.with.a.car$data$marks==1]
common_bw_car01 <- LSCV.risk(as.ppp(X_Accident.with.a.car_1),
as.ppp(X_Accident.with.a.car_0),
method = "hazelton",hlim = c(0,3000))
common_bw_car01 <- LSCV.risk(as.ppp(X_Accident.with.a.car_0),
as.ppp(X_Accident.with.a.car_1),
method = "hazelton",hlim = c(0,3000))
plot(d_X_Accident.with.a.car_1/d_X_Accident.with.a.car_0,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
d_X_Accident.with.a.car_0 <- densityQuick.lpp(unmark(X_Accident.with.a.car_0), sigma = common_bw_car01,
positive = TRUE,dimyx=256)
d_X_Accident.with.a.car_1 <- densityQuick.lpp(unmark(X_Accident.with.a.car_1), sigma = common_bw_car01,
positive = TRUE,dimyx=256)
plot(d_X_Accident.with.a.car_1/d_X_Accident.with.a.car_0,main="",ribwid=0.04,ribsep=0.02,cex.axis=2)
hour1 <- as.numeric(X$data$Time) # extract time
X_hour1 <- as.stlpp(X_unmark,t=hour1) # create a space-time pattern
d_X_hour1 <- density(X_hour1,dimyx=256)
plot(attr(d_X_hour1,"tempden")) # density plot
tgrid <- attr(d_X_hour1,"tempden")$x
hh1 <- which(tgrid>=6 & tgrid<9 & tgrid>=2.5 & tgrid<7.5)
hh1 <- which(tgrid>=6 & tgrid<9 & tgrid>=14.5 & tgrid<19.5)
hh2 <- which(tgrid<6 & tgrid>=9 & tgrid<14.5 tgrid>=19.5)
hh2 <- which(tgrid<6 & tgrid>=9 & tgrid<14.5 & tgrid>=19.5)
out_hh_1 <- d_X_hour1[[1]]
for (j in hh1) {
out_hh_1 <- out_h_1+d_X_hour1[[j]]
}
out_hh_1 <- out_hh_1 -  d_X_hour1[[1]]
out_hh_2 <- d_X_hour1[[1]]
for (j in hh2) {
out_hh_2 <- out_hh_2+d_X_hour1[[j]]
}
out_hh_2 <- out_hh_2 -  d_X_hour1[[1]]
im_d_hh_1 <- raster(as.im(out_hh_1))
im_d_hh_2 <- raster(as.im(out_hh_2))
out_hh_stack <- stack(im_d_hh_1,im_d_hh_2)
names(out_h_stack)=c("rush","no")
names(out_hh_stack)=c("rush","no")
qtss_hh <- as.vector(sort(c(quantile(im_d_hh_1*1000,seq(0,1,len=20)),
quantile(im_d_hh_2*1000,seq(0,1,len=20)))))
spplot(out_hh_stack*1000,at=qtss_hh,col.regions=c(viridis(40),rep("#f03b20",2)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,at=qtss_hh)
spplot(out_hh_stack*1000)
hh1
hh2
hh1 <- which(tgrid>=11.5 & tgrid<19.5)
hh1
hh2 <- which(tgrid<11.5 & tgrid>=19.5)
out_hh_1 <- d_X_hour1[[1]]
for (j in hh1) {
out_hh_1 <- out_h_1+d_X_hour1[[j]]
}
out_hh_1 <- out_hh_1 -  d_X_hour1[[1]]
out_hh_1 <- d_X_hour1[[1]]
for (j in hh1) {
out_hh_1 <- out_hh_1+d_X_hour1[[j]]
}
out_hh_1 <- out_hh_1 -  d_X_hour1[[1]]
out_hh_2 <- d_X_hour1[[1]]
for (j in hh2) {
out_hh_2 <- out_hh_2+d_X_hour1[[j]]
}
out_hh_2 <- out_hh_2 -  d_X_hour1[[1]]
im_d_hh_1 <- raster(as.im(out_hh_1))
im_d_hh_2 <- raster(as.im(out_hh_2))
out_hh_stack <- stack(im_d_hh_1,im_d_hh_2)
names(out_hh_stack)=c("rush","no")
qtss_hh <- as.vector(sort(c(quantile(im_d_hh_1*1000,seq(0,1,len=20)),
quantile(im_d_hh_2*1000,seq(0,1,len=20)))))
spplot(out_hh_stack*1000,at=qtss_hh,col.regions=c(viridis(40),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000)
spplot(out_hh_stack*1000,at=qtss_hh,col.regions=c(viridis(40),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
qtss_hh <- as.vector(sort(c(quantile(im_d_hh_1*1000,seq(0,1,len=20)),
quantile(im_d_hh_2*1000,seq(0,1,len=20)))))
spplot(out_hh_stack*1000,at=qtss_hh,col.regions=c(viridis(40),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,at=qtss_hh,col.regions=c(viridis(420),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,at=qtss_hh,col.regions=c(viridis(20),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,at=qtss_hh)
qtss_hh <- as.vector(sort(c(quantile(im_d_hh_1*1000,seq(0,1,len=10)),
quantile(im_d_hh_2*1000,seq(0,1,len=10)))))
spplot(out_hh_stack*1000,at=qtss_hh)
spplot(out_hh_stack*1000,col.regions=c(viridis(20),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(40),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(60),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(80),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(10),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(15),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(12),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(11),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(13),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(14),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(15),rep("#f03b20",1)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(15),rep("#f03b20",2)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(15),rep("#f03b20",3)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(15),rep("#f03b20",4)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(15),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(15),rep("#f03b20",6)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_hh_stack*1000,col.regions=c(viridis(15),rep("#f03b20",6)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
month <- as.numeric(X$data$Month)
X_month <- as.stlpp(X_unmark,t=month)
d_X_month <- density(X_month,dimyx=256)
plot(attr(d_X_month,"tempden")) # density plot
mgrid <- attr(d_X_month,"tempden")$x
m1 <- which(mgrid<3.5)
m2 <- which(mgrid>=3.5 & mgrid<6.5)
m3 <- which(mgrid>=6.5 & mgrid<9.5)
m4 <- which(mgrid>=9.5 )
out_m_1 <- d_X_month[[1]]
for (j in m1) {
out_m_1 <- out_m_1+d_X_month[[j]]
}
out_m_1 <- out_m_1 -  d_X_month[[1]]
out_m_2 <- d_X_month[[2]]
for (j in m2) {
out_m_2 <- out_m_2+d_X_month[[j]]
}
out_m_2 <- out_m_2 -  d_X_month[[2]]
out_m_3 <- d_X_month[[3]]
for (j in m3) {
out_m_3 <- out_m_3+d_X_month[[j]]
}
out_m_3 <- out_m_3 -  d_X_month[[3]]
out_m_4 <- d_X_month[[4]]
for (j in m4) {
out_m_4 <- out_m_4+d_X_month[[j]]
}
out_m_4 <- out_m_4 -  d_X_month[[4]]
im_d_m_1 <- raster(as.im(out_m_1))
im_d_m_2 <- raster(as.im(out_m_2))
im_d_m_3 <- raster(as.im(out_m_3))
im_d_m_4 <- raster(as.im(out_m_4))
out_m_stack <- stack(im_d_m_1,im_d_m_2,im_d_m_3,im_d_m_4)
names(out_m_stack)<- c("Jan_March","Apr_Jun","Jul_Sep","Oct_Dec")
qtss_m <- as.vector(sort(c(quantile(im_d_m_1*1000,seq(0,1,len=20)),
quantile(im_d_m_2*1000,seq(0,1,len=20)),
quantile(im_d_m_3*1000,seq(0,1,len=20)),
quantile(im_d_m_4*1000,seq(0,1,len=20)))))
spplot(out_m_stack*1000,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
spplot(out_m_stack*100,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
qtss_m <- as.vector(sort(c(quantile(im_d_m_1*100,seq(0,1,len=20)),
quantile(im_d_m_2*100,seq(0,1,len=20)),
quantile(im_d_m_3*100,seq(0,1,len=20)),
quantile(im_d_m_4*100,seq(0,1,len=20)))))
spplot(out_m_stack*100,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
X_month <- as.stlpp(X_unmark,t=round((month+runif(length(month,-0.2,0.2))),2))
X_month <- as.stlpp(X_unmark,t=round((month+runif(length(month),-0.2,0.2)),2))
X_month
X_month$data$t
d_X_month <- density(X_month,dimyx=256)
plot(attr(d_X_month,"tempden")) # density plot
mgrid <- attr(d_X_month,"tempden")$x
m1 <- which(mgrid<3.5)
m2 <- which(mgrid>=3.5 & mgrid<6.5)
m3 <- which(mgrid>=6.5 & mgrid<9.5)
m4 <- which(mgrid>=9.5 )
out_m_1 <- d_X_month[[1]]
for (j in m1) {
out_m_1 <- out_m_1+d_X_month[[j]]
}
out_m_1 <- out_m_1 -  d_X_month[[1]]
out_m_2 <- d_X_month[[2]]
for (j in m2) {
out_m_2 <- out_m_2+d_X_month[[j]]
}
out_m_2 <- out_m_2 -  d_X_month[[2]]
out_m_3 <- d_X_month[[3]]
for (j in m3) {
out_m_3 <- out_m_3+d_X_month[[j]]
}
out_m_3 <- out_m_3 -  d_X_month[[3]]
out_m_4 <- d_X_month[[4]]
for (j in m4) {
out_m_4 <- out_m_4+d_X_month[[j]]
}
out_m_4 <- out_m_4 -  d_X_month[[4]]
im_d_m_1 <- raster(as.im(out_m_1))
im_d_m_2 <- raster(as.im(out_m_2))
im_d_m_3 <- raster(as.im(out_m_3))
im_d_m_4 <- raster(as.im(out_m_4))
out_m_stack <- stack(im_d_m_1,im_d_m_2,im_d_m_3,im_d_m_4)
names(out_m_stack)<- c("Jan_March","Apr_Jun","Jul_Sep","Oct_Dec")
qtss_m <- as.vector(sort(c(quantile(im_d_m_1*100,seq(0,1,len=20)),
quantile(im_d_m_2*100,seq(0,1,len=20)),
quantile(im_d_m_3*100,seq(0,1,len=20)),
quantile(im_d_m_4*100,seq(0,1,len=20)))))
spplot(out_m_stack*100,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
qtss_m <- as.vector(sort(c(quantile(im_d_m_1*1000,seq(0,1,len=20)),
quantile(im_d_m_2*1000,seq(0,1,len=20)),
quantile(im_d_m_3*1000,seq(0,1,len=20)),
quantile(im_d_m_4*1000,seq(0,1,len=20)))))
spplot(out_m_stack*1000,at=qtss_m,col.regions=c(viridis(80),rep("#f03b20",5)),
par.settings=list(fontsize=list(text=18)),colorkey=list(lables=list(cex=1.5,cex.main=1.5)))
citation
citation("spsatstat")
citation("spatstat")
citation("spatstat",bibtex=T)
print(citation("spatstat",bibtex=T))
print(citation(spatstat,bibtex=T))
print(citation(spatstat,bibtex=TRUE))
print(citation(spatstat),bibtex=TRUE)
print(citation("spatstat"),bibtex=TRUE)
print(citation("sparr"),bibtex=TRUE)
print(citation("sparr"),bibtex=TRUE)
print(citation(sf),bibtex=TRUE)
print(citation("sf"),bibtex=TRUE)
print(citation("ggplot2"),bibtex=TRUE)
plot(attr(d_X_month,"tempden")) # density plot
month.tpp <- tpp(month)
month.tpp
d_month.tpp <- density(month.tpp)
plot(d_month.tpp)
plot(d_month.tpp,xlim=c(1,12))
?density
